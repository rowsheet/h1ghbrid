"""
Django settings for gettingstarted project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import django_heroku
import dj_database_url
import base64

GCLOUD_BUCKET = os.environ["GCLOUD_BUCKET"]
GCLOUD_PROJECT = os.environ["GCLOUD_PROJECT"]
GCLOUD_CLIENT_ID = os.environ["GCLOUD_CLIENT_ID"]
GCLOUD_CLIENT_EMAIL = os.environ["GCLOUD_CLIENT_EMAIL"]
GCLOUD_PK_ID = os.environ["GCLOUD_PK_ID"]
# Google PK is multi-line and must be base_64 decoded.
GCLOUD_PK = str(base64.b64decode(os.environ["GCLOUD_PK_B64"]), "utf-8")

JET_DEFAULT_THEME = 'light-blue'
# JET_SIDE_MENU_COMPACT = True
JET_CHANGE_FORM_SIBLING_LINKS = True
JET_INDEX_DASHBOARD = 'dashboard.CustomIndexDashboard'
JET_APP_INDEX_DASHBOARD = 'dashboard.CustomAppIndexDashboard'

# Determine deployment environment.
ENV = "development"
if "ENV" in os.environ:
	if os.environ["ENV"] == "production":
		ENV = "production"


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "CHANGE_ME!!!! (P.S. the SECRET_KEY environment variable will be used, if set, instead)."

# Don't show debug in production.
DEBUG = True
if ENV == "production":
	DEBUG = False

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "jet",
    "jet.dashboard",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "tgtree",
    "site_content",
    "storefront",
    "cms",
    # "cms.CmsConfig",
    "membership_manager",
    "general_info",
    "tgtree_info",
    # "budtender_qa",
    "django.contrib.admin",
    "django_summernote",
    "cloud_storage",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "gettingstarted.urls"

# TEMPLATES = [
#     {
#         "BACKEND": "django.template.backends.django.DjangoTemplates",
#         "DIRS": [os.path.join(BASE_DIR, "gettingstarted/templates")],
#         "APP_DIRS": True,
#         "OPTIONS": {
#             "context_processors": [
#                 "django.template.context_processors.debug",
#                 "django.template.context_processors.request",
#                 "django.contrib.auth.context_processors.auth",
#                 "django.contrib.messages.context_processors.messages",
#             ]
#         },
#     }
# ]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
        "DIRS": [os.path.join(BASE_DIR, "gettingstarted/templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "gettingstarted.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE" : "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3")
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = "/static/"

# Sumernote required this.
MEDIA_URL = 'https://storage.googleapis.com/tgtree/'
# MEDIA_ROOT = '/dev/null'

django_heroku.settings(locals())

# Don't require SSL for database in development.
if ENV == "development":
	locals()['DATABASES']['default'] = dj_database_url.config(
	    conn_max_age=django_heroku.MAX_CONN_AGE, ssl_require=False)
